name: ci-cd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  S3_BUCKET_NAME: imagedata-ec2-lookie

jobs:
  build-deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3  # checkout 버전을 v3로 변경하여 Node.js 업데이트 반영

      - name: Set up JDK 17
        uses: actions/setup-java@v3  # setup-java 버전을 v3로 업데이트
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
        run: ./gradlew clean build --stacktrace --info

      # deploy 디렉토리 생성
      - name: Create deploy directory
        run: mkdir -p ./deploy

      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./lookie.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./lookie.zip s3://imagedata-ec2-lookie/

      # Deploy
      - name: Deploy
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
        run: |
          aws deploy create-deployment \
                      --application-name lookie \
                      --deployment-group-name lookie-group \
                      --file-exists-behavior OVERWRITE \
                      --s3-location bucket=imagedata-ec2-lookie,bundleType=zip,key=lookie.zip \
                      --region ap-northeast-2

      - name: Create SSH directory
        run: mkdir -p ~/.ssh

      - name: Add EC2 Host to known_hosts
        run: |
          ssh-keyscan -H 43.200.2.168 >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # SSH 키 파일 생성
          echo "$KEY" > ec2_key.pem
          chmod 400 ec2_key.pem
          
          # 파일 전송 및 배포
          scp -i ec2_key.pem lookie.zip ubuntu@43.200.2.168:/home/ubuntu/
          
          # EC2에서 파일 압축 해제 및 권한 설정 후 배포 스크립트 실행
          ssh -i ec2_key.pem ubuntu@43.200.2.168 << 'EOF'
            unzip -o /home/ubuntu/lookie.zip -d /home/ubuntu/app
            chmod +x /home/ubuntu/app/deploy.sh  # 실행 권한 추가
            /home/ubuntu/app/deploy.sh  # 배포 스크립트 실행
          EOF
          
          # SSH 키 파일 삭제
          rm ec2_key.pem